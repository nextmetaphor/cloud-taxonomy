<!doctype html>

<html>

<head>
    <meta charset="utf-8">
    <title>Cloud Taxonomy</title>

    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <script type="application/javascript">
        let serviceCapabilityMap = new Map()
        let serviceProviderMap = new Map()
        let serviceTenancyMap = new Map()
        let serviceMap = new Map()
        let serviceConfigurationMap = new Map()
    </script>
</head>

<style>
    body {
        margin: auto;
        width: 98%;
        padding-top: 10px;
        font-family: "RobotoDraft", "Roboto", "Helvetica", sans-serif;
        -webkit-font-smoothing: antialiased;
    }

    table, th, td {
        border: 1px solid white;
        border-collapse: collapse;
    }
    th {
        background-color: darkblue;
        color: white;
    }
    td {
        background-color: darkgray;
    }

    .right-align {
        text-align: right;
    }
    .service-icon {
        max-height: 16px;
        max-width: 16px;
    }

    .category {
        text-align: right;
        background-color: darkblue;
        color: white;
    }
    .subcategory {
        text-align: right;
        background-color: mediumblue;
        color: ghostwhite;
    }
    .service {
        text-align: center;
    }


    .rTable { display: table; } .rTableRow { display: table-row; } .rTableHeading { display: table-header-group; } .rTableBody { display: table-row-group; } .rTableFoot { display: table-footer-group; } .rTableCell, .rTableHead { display: table-cell; }
</style>

<body id="body">
{{- range $capability := . -}}
    {{- $capabilityClass := $capability.Class -}}
    {{- $capabilityID := $capability.ID -}}
    {{- $capabilityUID := (print $capabilityClass "-" $capabilityID)}}
    {{- $capabilityName := index $capability.Fields "ServiceCapability.Name"}}
    {{- $capabilityDescription := index $capability.Fields "ServiceCapability.Description"}}

    <script>
        serviceCapabilityMap.set({{$capabilityID}}, {
            Name: {{$capabilityName}},
            Description: {{$capabilityDescription}},
            CategoryMap: new Map(),
        })
    </script>

    {{- range $key,$value := $capability.CompositeSectionDefinitions -}}
        {{- if eq $key "PROVIDED_BY" -}}
            {{- range $category := $value -}}
                {{- $categoryClass := $category.Class -}}
                {{- $categoryID := $category.ID -}}
                {{- $categoryUID := (print $categoryClass "-" $categoryID)}}
                {{- $categoryName := index $category.Fields "ServiceCategory.Name"}}
                {{- $categoryDescription := index $category.Fields "ServiceCategory.Description"}}

                <script>
                    serviceCapabilityMap.get({{$capabilityID}}).CategoryMap.set({{$categoryID}}, {
                        Name: {{$categoryName}},
                        Description: {{$categoryDescription}},
                        SubcategoryMap: new Map(),
                    })
                </script>

                {{- range $key,$value := $category.CompositeSectionDefinitions -}}
                    {{- if eq $key "GROUPED_BY" -}}
                        {{- range $subcategory := $value -}}
                            {{- $subcategoryClass := $subcategory.Class -}}
                            {{- $subcategoryID := $subcategory.ID -}}
                            {{- $subcategoryUID := (printf "%s-%s" $subcategoryClass $subcategoryID)}}
                            {{- $subcategoryName := index $subcategory.Fields "ServiceSubcategory.Name" -}}
                            {{- $subcategoryDescription := index $subcategory.Fields "ServiceSubcategory.Description" -}}

                            <script>
                                serviceCapabilityMap.get({{$capabilityID}}).CategoryMap.get({{$categoryID}}).SubcategoryMap.set({{$subcategoryID}}, {
                                    Name: {{$subcategoryName}},
                                    Description: {{$subcategoryDescription}},
                                    ServiceByTenancyMap: new Map()
                                })
                            </script>

                            {{- range $key,$value := $subcategory.CompositeSectionDefinitions -}}
                                {{- if eq $key "BELONGS_TO" -}}
                                    {{- range $serviceConfiguration := $value -}}
                                        {{- $serviceConfigurationClass := $serviceConfiguration.Class -}}
                                        {{- $serviceConfigurationID := $serviceConfiguration.ID -}}
                                        {{- $serviceConfigurationUID := (printf "%s-%s" $serviceConfigurationClass $serviceConfigurationID)}}
                                        {{- $serviceConfigurationName := index $serviceConfiguration.Fields "ServiceConfiguration.Name" -}}
                                        {{- $serviceConfigurationDescription := index $serviceConfiguration.Fields "ServiceConfiguration.Description" -}}
                                        {{- $serviceConfigurationLink := index $serviceConfiguration.Fields "ServiceConfiguration.Link" -}}
                                        {{- $serviceConfigurationImgSrc := index $serviceConfiguration.Fields "ServiceConfiguration.ImgSrc" -}}

                                        {{- range $key,$value := $serviceConfiguration.CompositeSectionDefinitions -}}
                                            {{- if eq $key "CONFIGURED_IN" -}}
                                                {{- range $service := $value -}}
                                                    {{- $serviceClass := $service.Class -}}
                                                    {{- $serviceID := $service.ID -}}
                                                    {{- $serviceUID := (printf "%s-%s" $serviceClass $serviceID)}}
                                                    {{- $serviceName := index $service.Fields "Service.Name" -}}
                                                    {{- $serviceDescription := index $service.Fields "Service.Description" -}}
                                                    {{- $serviceLink := index $service.Fields "Service.Link" -}}
                                                    {{- $serviceImgSrc := index $service.Fields "Service.ImgSrc" -}}

                                                    {{- $providerID := index $service.Fields "ServiceProvider.ID" -}}
                                                    {{- $providerName := index $service.Fields "ServiceProvider.Name" -}}
                                                    {{- $tenancyID := index $service.Fields "ServiceTenancy.ID" -}}
                                                    {{- $tenancyName := index $service.Fields "ServiceTenancy.Name" -}}
                                                    {{- $tenancyBackgroundColour := index $service.Fields "ServiceTenancy.BackgroundColour" -}}
                                                    {{- $tenancyFontColour := index $service.Fields "ServiceTenancy.FontColour" -}}

                                                    <script>
                                                        serviceConfigurationMap.set({{$serviceConfigurationID}}, {
                                                            Name: {{$serviceConfigurationName}},
                                                            Description: {{$serviceConfigurationDescription}},
                                                            Link: {{$serviceConfigurationLink}},
                                                            ImgSrc: {{$serviceConfigurationImgSrc}},
                                                            ServiceID: {{$serviceID}},
                                                        })

                                                        serviceMap.set({{$serviceID}}, {
                                                            Name: {{$serviceName}},
                                                            Description: {{$serviceDescription}},
                                                            Link: {{$serviceLink}},
                                                            ImgSrc: {{$serviceImgSrc}},
                                                            ProviderID: {{$providerID}},
                                                            TenancyID: {{$tenancyID}},
                                                        })

                                                        serviceProviderMap.set({{$providerID}}, {
                                                            Name: {{$providerName}},
                                                        })

                                                        serviceTenancyMap.set({{$tenancyID}}, {
                                                            Name: {{$tenancyName}},
                                                            BackgroundColour: {{$tenancyBackgroundColour}},
                                                            FontColour: {{$tenancyFontColour}},
                                                        })

                                                        // TODO this breaks if we have more than one service per subcategory
                                                        serviceCapabilityMap.get({{$capabilityID}}).CategoryMap.get({{$categoryID}}).SubcategoryMap.get({{$subcategoryID}}).ServiceByTenancyMap.set({{$providerID}}, {
                                                            ServiceConfigurationID: {{$serviceConfigurationID}}
                                                        });
                                                    </script>

                                                {{end -}}
                                            {{- end -}}
                                        {{- end -}}
                                        {{/* end of ServiceConfiguration loop */}}

                                    {{end -}}
                                {{- end -}}
                            {{- end -}}
                            {{/* end of Service loop */}}

                        {{end -}}
                    {{- end -}}
                {{- end -}}
                {{/* end of SubCategory loop*/}}

            {{end -}}
        {{- end -}}
        {{/* end of Category loop*/}}
    {{end}}

{{end}}


<script type="application/javascript">
    let table = document.createElement('table');
    let thead = document.createElement('thead');
    let tbody = document.createElement('tbody');

    table.appendChild(thead);
    table.appendChild(tbody);

    document.getElementById('body').appendChild(table);

    // create header rows
    let headerRow = document.createElement('tr');

    let element = document.createElement('th')
    element.innerHTML = 'Capability'
    element.className = 'right-align'
    headerRow.append(element);

    element = document.createElement('th')
    element.innerHTML = 'Category'
    element.className = 'right-align'
    headerRow.append(element);

    element = document.createElement('th')
    element.innerHTML = 'Subcategory'
    element.className = 'right-align'
    headerRow.append(element);

    serviceProviderMap.forEach( function (serviceProvider, index) {
        let heading = document.createElement('th');
        heading.innerHTML = serviceProvider.Name;

        headerRow.appendChild(heading)
    });
    thead.append(headerRow)

    // create body rows for each capability
    serviceCapabilityMap.forEach(function (serviceCapability, id) {
        let currentRow = document.createElement('tr');
        let capabilityData = document.createElement('th');

        // calculate row span for capability row
        let rowSpan = 0
        serviceCapability.CategoryMap.forEach(function (serviceCategory, id) {
            serviceCategory.SubcategoryMap.forEach(function (serviceSubcategory, id) {
                rowSpan++;
            });
        });

        capabilityData.rowSpan = rowSpan;
        capabilityData.innerHTML = serviceCapability.Name
        capabilityData.className = 'right-align'
        currentRow.append(capabilityData)

        let serviceCategoryMap = serviceCapability.CategoryMap
        serviceCategoryMap.forEach(function (serviceCategory, id) {
            if (currentRow === null) {
                currentRow = document.createElement('tr');
            }

            let categoryData = document.createElement('td');
            categoryData.rowSpan = serviceCategory.SubcategoryMap.size
            categoryData.innerHTML = serviceCategory.Name
            categoryData.className = 'category'
            currentRow.appendChild(categoryData)

            // subdivide for each subcategory
            serviceCategory.SubcategoryMap.forEach(function (serviceSubcategory, index) {
                if (currentRow === null) {
                    currentRow = document.createElement('tr');
                }
                let subCategoryData = document.createElement('td');
                subCategoryData.innerHTML = serviceSubcategory.Name;
                subCategoryData.className = "subcategory";
                currentRow.appendChild(subCategoryData)

                serviceProviderMap.forEach( function (serviceProvider, serviceProviderID) {
                    let serviceData = document.createElement('td');
                    serviceData.className = "service";
                    if (serviceSubcategory.ServiceByTenancyMap.get(serviceProviderID) !== undefined) {
                        let serviceConfigurationID = serviceSubcategory.ServiceByTenancyMap.get(serviceProviderID).ServiceConfigurationID
                        if (serviceConfigurationID !== undefined) {
                            let serviceConfigurationObject = serviceConfigurationMap.get(serviceConfigurationID);
                            if (serviceConfigurationObject !== undefined) {

                                let serviceLink = ""
                                if (serviceConfigurationObject.Link !== undefined) {
                                    if (serviceConfigurationObject.Description === null) {
                                        serviceLink = serviceMap.get(serviceConfigurationObject.ServiceID).Link;
                                    } else {
                                        serviceLink = serviceConfigurationObject.Link;
                                    }
                                }

                                let serviceName = ""
                                if (serviceConfigurationObject.Name !== undefined) {
                                    if (serviceConfigurationObject.Name === null) {
                                        serviceName = serviceMap.get(serviceConfigurationObject.ServiceID).Name;
                                    } else {
                                        serviceName = serviceConfigurationObject.Name;
                                    }
                                }

                                let serviceDescription = ""
                                if (serviceConfigurationObject.Description !== undefined) {
                                    if (serviceConfigurationObject.Description === null) {
                                        serviceDescription = serviceMap.get(serviceConfigurationObject.ServiceID).Description;
                                    } else {
                                        serviceDescription = serviceConfigurationObject.Description;
                                    }
                                }

                                serviceData.innerHTML = "<a title=\"" + serviceDescription + "\"target=\"_blank\" href=\"" + serviceLink + "\">" + serviceName + "</a>";

                                if ((serviceConfigurationObject.ImgSrc !== undefined && serviceConfigurationObject.ImgSrc !== null) || serviceMap.get(serviceConfigurationObject.ServiceID).ImgSrc !== null) {
                                    let imageData = document.createElement('img');
                                    imageData.className = "service-icon"

                                    let imgSrc = ""
                                    if (serviceConfigurationObject.ImgSrc !== undefined) {
                                        if (serviceConfigurationObject.ImgSrc === null) {
                                            imgSrc = serviceMap.get(serviceConfigurationObject.ServiceID).ImgSrc;
                                        } else {
                                            imgSrc = serviceConfigurationObject.ImgSrc;
                                        }
                                    }

                                    imageData.src = "data:image/" + imgSrc;

                                    serviceData.prepend(imageData);
                                }
                            }
                        }
                    }

                    currentRow.appendChild(serviceData)
                });

                tbody.appendChild(currentRow)
                currentRow = null
            })
            currentRow = null
        })
    });

</script>

</body>

</html>